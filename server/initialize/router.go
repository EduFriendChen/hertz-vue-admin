package initialize

import (
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/server"
	_ "github.com/edufriendchen/hertz-vue-admin/server/docs"
	"github.com/edufriendchen/hertz-vue-admin/server/global"
	"github.com/edufriendchen/hertz-vue-admin/server/router"
	"github.com/edufriendchen/hertz-vue-admin/server/utils"
)

// 初始化总路由
func Routers(h *server.Hertz) {

	ServerGroup := h.Group("")

	systemRouter := router.RouterGroupApp.System
	exampleRouter := router.RouterGroupApp.Example
	// 如果想要不使用nginx代理前端网页，可以修改 web/.env.production 下的
	// VUE_APP_BASE_API = /
	// VUE_APP_BASE_PATH = http://localhost
	// 然后执行打包命令 npm run build。在打开下面4行注释
	// Router.LoadHTMLGlob("./dist/*.html") // npm打包成dist的路径
	// Router.Static("/favicon.ico", "./dist/favicon.ico")
	// Router.Static("/static", "./dist/assets")   // dist里面的静态资源
	// Router.StaticFile("/", "./dist/index.html") // 前端网页入口页面

	// ! h.StaticFS(global.CONFIG.Local.Path, http.Dir(global.CONFIG.Local.StorePath)) // 为用户头像和文件提供静态地址

	// Router.Use(middleware.LoadTls())  // 如果需要使用https 请打开此中间件 然后前往 core/server.go 将启动模式 更变为 Router.RunTLS("端口","你的cre/pem文件","你的key文件")
	// 跨域，如需跨域可以打开下面的注释
	// Router.Use(middleware.Cors()) // 直接放行全部跨域请求
	// Router.Use(middleware.CorsByRules()) // 按照配置的规则放行跨域请求
	global.LOG.Info("use middleware cors")

	// !  h.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	// ! global.LOG.Info("register swagger handler")
	// 方便统一添加路由组前缀 多服务器上线使用
	PublicGroup := ServerGroup.Group("")
	{
		// 健康监测
		PublicGroup.GET("/health", func(ctx context.Context, c *app.RequestContext) {
			utils.GetAddressByIp("58.56.139.206")
			c.JSON(200, "ok")
		})
	}
	// 不鉴权路由组
	{
		systemRouter.InitBaseRouter(h) // 注册基础功能路由
		systemRouter.InitInitRouter(h) // 自动初始化相关
	}
	// PrivateGroup := h.Group("")
	// PrivateGroup.Use(middleware.JWTAuth()).Use(middleware.CasbinHandler())
	{
		systemRouter.InitApiRouter(h)                 // 注册功能api路由
		systemRouter.InitJwtRouter(h)                 // jwt相关路由
		systemRouter.InitUserRouter(h)                // 注册用户路由
		systemRouter.InitMenuRouter(h)                // 注册menu路由
		systemRouter.InitSystemRouter(h)              // system相关路由
		systemRouter.InitCasbinRouter(h)              // 权限相关路由
		systemRouter.InitAutoCodeRouter(h)            // 创建自动化代码
		systemRouter.InitAuthorityRouter(h)           // 注册角色路由
		systemRouter.InitSysDictionaryRouter(h)       // 字典管理
		systemRouter.InitAutoCodeHistoryRouter(h)     // 自动化代码历史
		systemRouter.InitSysOperationRecordRouter(h)  // 操作记录
		systemRouter.InitSysDictionaryDetailRouter(h) // 字典详情管理
		systemRouter.InitAuthorityBtnRouterRouter(h)  // 字典详情管理
		systemRouter.InitOnlineUserRouter(h)          // 在线用户管理
		systemRouter.InitTestRouter(h)                // 测试
		systemRouter.InitLogRouter(h)

		exampleRouter.InitExcelRouter(h)                 // 表格导入导出
		exampleRouter.InitCustomerRouter(h)              // 客户路由
		exampleRouter.InitFileUploadAndDownloadRouter(h) // 文件上传下载功能路由

		// Code generated by github.com/edufriendchen/hertz-vue-admin/server Begin; DO NOT EDIT.
		// Code generated by github.com/edufriendchen/hertz-vue-admin/server End; DO NOT EDIT.
	}

	// InstallPlugin(Router) // 安装插件

	global.LOG.Info("router register success")
}
